{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Spinner.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","onCardClick","id","type","link","name","onCardDelete","onCardLike","length","Spinner","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","isLoading","cards","map","currentCard","Footer","PopupWithForm","isOpen","onSubmit","title","children","value","inputValue","onClose","ImagePopup","api","config","this","_url","url","_headers","headers","currentPromise","then","response","ok","json","Promise","reject","status","_contactTheServer","fetch","method","newUserInfo","body","JSON","stringify","newCardInfo","cardId","cardID","isNotLiked","EditProfilePopup","useState","setName","description","setDescription","useEffect","event","preventDefault","onUpdateUser","onChange","target","required","minLength","maxLength","placeholder","EditAvatarPopup","avatarURL","useRef","onUpdateAvatar","current","ref","AddPlacePopup","cardName","setCardName","cardLink","setCardLink","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setIsLoading","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","all","getUserInformation","getCards","userInformation","cardsFromServer","catch","error","console","log","Provider","putLike","newCard","state","c","deleteCardFromServer","result","newCards","filter","editProfile","newUserInformation","updateAvatar","addNewCardToServer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de36a979.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header page__content\">\n      <img src={logo} alt=\"Логотип страницы\" className=\"header__logo\" />\n    </header>\n  )\n}\n\nexport default Header;\n","import { createContext } from \"react\";\n\nexport const CurrentUserContext = createContext();\n","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const currentUser = useContext(CurrentUserContext);\n  const isOwn = props.card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `element-template__trash ${!isOwn ? 'element-template__trash_disabled' : ''}`\n  );\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = (\n    `element-template__like ${isLiked ? 'element-template__like_active' : ''}`\n  );\n\n  function handleClick() {\n    props.onCardClick(props.card)\n  }\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n  function handleDeleteClick() {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <div className=\"element-template__element\">\n      <button onClick={handleClick} className=\"popup-open element-template__open\" id=\"open-card\" type=\"button\"><img className=\"element-template__picture\" src={props.card.link} alt={props.card.name} /></button>\n      <button onClick={handleDeleteClick} className={cardDeleteButtonClassName} type=\"button\"></button>\n      <div className=\"element-template__group\">\n        <h2 className=\"element-template__title\">{props.card.name}</h2>\n        <button onClick={handleLikeClick} className={cardLikeButtonClassName} type=\"button\"></button>\n        <p className=\"element-template__like-count\">{props.card.likes.length}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;\n","function Spinner() {\n  return(\n    <div className=\"spinner\"></div>\n  )\n}\n\nexport default Spinner;\n","import { useContext } from 'react';\nimport Card from './Card';\nimport Spinner from './Spinner';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className='content'>\n      <section className=\"profile page__content\">\n        <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар пользователя\" />\n        <button type=\"button\" onClick={props.onEditAvatar} className=\"profile__avatar-overlay\"></button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button type=\"button\" onClick={props.onEditProfile} className=\"popup-open profile__edit-button\"></button>\n          <p className=\"profile__description\">{currentUser.about}</p>\n        </div>\n        <button type=\"button\" onClick={props.onAddPlace} className=\"popup-open profile__add-button\"></button>\n      </section>\n      <section className=\"elements page__content\">\n      {(props.isLoading)\n          ? (<Spinner />)\n          : (props.cards).map(currentCard => {\n            return (<Card\n              onCardDelete={props.onCardDelete}\n              onCardLike={props.onCardLike}\n              onCardClick={props.onCardClick}\n              key={currentCard._id}\n              card={currentCard} />)\n          })}\n      </section>\n    </main>\n  )\n}\n\nexport default Main;\n","function Footer() {\n  return (\n    <footer className=\"footer page__content\">\n      <p className=\"footer__text\">&#169; 2021 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer;\n","function PopupWithForm(props) {\n  return (\n    <section className={`popup popup_type_${props.name} ${props.isOpen && `popup_opened`}`} id={`popup-${props.name}`}>\n      <form onSubmit={props.onSubmit} className=\"popup__container\" name={`popup-form-${props.name}`} id={`form-${props.name}`}>\n        <h2 className=\"popup__title\">{props.title}</h2>\n        {props.children}\n        <input type=\"submit\" className=\"popup__submit\" value={props.inputValue} name=\"popup-submit\" />\n        <button onClick={props.onClose} className=\"popup__close\" id={`close-${props.name}`} type=\"button\"></button>\n      </form>\n    </section>\n  )\n}\n\nexport default PopupWithForm;\n","function ImagePopup(props) {\n  return (\n    <section className={`popup popup-view-card ${(props.card.link !== '') && `popup_opened`}`} id=\"popup-view-card\">\n      <div className=\"popup__open-card\">\n        <figure className=\"popup__picture\">\n          <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\n          <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\n        </figure>\n        <button onClick={props.onClose} className=\"popup__close\" id=\"close-card\" type=\"button\"></button>\n      </div>\n    </section>\n  )\n}\n\nexport default ImagePopup;\n","class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _contactTheServer(currentPromise) {\n    return currentPromise\n      .then(response => {\n        if (!response.ok) {\n          return Promise.reject(`Ошибка ${response.status}`);\n        }\n        return response.json();\n      })\n  }\n\n  getUserInformation() {\n    return this._contactTheServer(fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n      method: 'GET',\n    }));\n  }\n\n  getCards() {\n    return this._contactTheServer(fetch(`${this._url}/cards`, {\n      headers: this._headers,\n      method: 'GET',\n    }));\n  }\n\n  editProfile(newUserInfo) {\n    return this._contactTheServer(fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(newUserInfo),\n    }));\n  }\n\n  addNewCardToServer(newCardInfo) {\n    return this._contactTheServer(fetch(`${this._url}/cards`, {\n      headers: this._headers,\n      method: 'POST',\n      body: JSON.stringify(newCardInfo)\n    }));\n  }\n\n  deleteCardFromServer(cardId) {\n    return this._contactTheServer(fetch(`${this._url}/cards/${cardId}`, {\n      headers: this._headers,\n      method: 'DELETE',\n    }));\n  }\n\n  putLike(cardID, isNotLiked) {\n    return this._contactTheServer(fetch(`${this._url}/cards/likes/${cardID}`, {\n      headers: this._headers,\n      method: isNotLiked ? 'PUT': 'DELETE',\n    }));\n  }\n\n  updateAvatar(avatar) {\n    return this._contactTheServer(fetch(`${this._url}/users/me/avatar`, {\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(avatar)\n    }));\n  }\n}\n\nconst api = new Api({\n  url: 'https://nomoreparties.co/v1/cohort-27',\n  headers: {\n    'authorization': '49889f34-1928-497a-a94e-146b8fe6d002',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n","import { useContext, useState, useEffect } from \"react\";\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const currentUser = useContext(CurrentUserContext);\n\n  function handleChangeName(event) {\n    setName(event.target.value);\n  }\n  function handleChangeDescription(event) {\n    setDescription(event.target.value);\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm onSubmit={handleSubmit} name='edit-author' title='Редактировать профиль' isOpen={props.isOpen} onClose={props.onClose} inputValue=\"Сохранить\">\n      <section className=\"popup__section\">\n        <input onChange={handleChangeName} type=\"text\" className=\"popup__field\" name=\"author-name\" id=\"name\" required minLength=\"2\" maxLength=\"40\" placeholder=\"Имя\" value={name} />\n        <span className=\"popup__error name-error\"></span>\n      </section>\n      <section className=\"popup__section\">\n        <input onChange={handleChangeDescription} type=\"text\" className=\"popup__field\" name=\"author-description\" id=\"description\" required minLength=\"2\" maxLength=\"200\" placeholder=\"Занятие\" value={description} />\n        <span className=\"popup__error description-error\"></span>\n      </section>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n","import { useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n  const avatarURL = useRef();\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarURL.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm onSubmit={handleSubmit} name='new-avatar' title='Обновить аватар' isOpen={props.isOpen} onClose={props.onClose} inputValue=\"Создать\">\n      <section className=\"popup__section\">\n        <input ref={avatarURL} type=\"url\" className=\"popup__field\" name=\"avatar\" id=\"avatar\" placeholder=\"Ссылка на аватар\" required />\n        <span className=\"popup__error link-error\"></span>\n      </section>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n","import { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n  const [cardName, setCardName] = useState('');\n  const [cardLink, setCardLink] = useState('');\n\n  function handleAddPlaceSubmit(event) {\n    event.preventDefault();\n    props.onAddPlace({\n      name: cardName,\n      link: cardLink\n    });\n  }\n  function handleChangeName(event) {\n    setCardName(event.target.value);\n  }\n  function handleChangeLink(event) {\n    setCardLink(event.target.value);\n  }\n\n  return (\n    <PopupWithForm onSubmit={handleAddPlaceSubmit} name='add-card' title='Новое место' isOpen={props.isOpen} onClose={props.onClose} inputValue=\"Создать\">\n      <section className=\"popup__section\">\n        <input onChange={handleChangeName} type=\"text\" className=\"popup__field\" name=\"card-place\" id=\"place\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" />\n        <span className=\"popup__error place-error\"></span>\n      </section>\n      <section className=\"popup__section\">\n        <input onChange={handleChangeLink} type=\"url\" className=\"popup__field\" name=\"card-link\" id=\"link\" placeholder=\"Ссылка на картинку\" required />\n        <span className=\"popup__error link-error\"></span>\n      </section>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;\n","import Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({ name: '', link: '' });\n  const [currentUser, setCurrentUser] = useState({ name: 'Загрузка...', about: 'Загрузка...' });\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n  function handleCardClick(card) {\n    setSelectedCard({ name: card.name, link: card.link });\n  }\n  function closeAllPopups() {\n    if (isEditAvatarPopupOpen) { handleEditAvatarClick() };\n    if (isEditProfilePopupOpen) { handleEditProfileClick() };\n    if (isAddPlacePopupOpen) { handleAddPlaceClick() };\n    if (selectedCard.link !== '') { setSelectedCard({ name: '', link: '' }) };\n  }\n  function handleUpdateUser(userInformation) {\n    api.editProfile(userInformation)\n      .then(newUserInformation => {\n        setCurrentUser(newUserInformation);\n        closeAllPopups();\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  function handleUpdateAvatar(avatar) {\n    api.updateAvatar(avatar)\n      .then(newUserInformation => {\n        setCurrentUser(newUserInformation);\n        closeAllPopups();\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    api.putLike(card._id, !isLiked)\n      .then(newCard => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  function handleCardDelete(card) {\n    api.deleteCardFromServer(card._id)\n      .then(result => {\n        const newCards = cards.filter((c) => {\n          return c._id !== card._id;\n        })\n        setCards(newCards);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  function handleAddPlace(card) {\n    api.addNewCardToServer(card)\n      .then(card => {\n        setCards([card, ...cards]);\n        closeAllPopups();\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  useEffect(() => {\n    Promise.all([api.getUserInformation(), api.getCards()])\n    .then(([userInformation, cardsFromServer]) => {\n      setCurrentUser(userInformation);\n      setCards(cardsFromServer);\n      setIsLoading(false);\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n        <Header />\n        <Main isLoading={isLoading} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} />\n        <Footer />\n        <EditProfilePopup onUpdateUser={handleUpdateUser} isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} />\n        <EditAvatarPopup onUpdateAvatar={handleUpdateAvatar} isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} />\n        <AddPlacePopup onAddPlace={handleAddPlace} isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} />\n        <PopupWithForm name='view-card' title='Вы уверены?' inputValue=\"Да\" />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}